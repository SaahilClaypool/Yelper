// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages/Messages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages {

  /// <summary>Holder for reflection information generated from Messages/Messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for Messages/Messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdNZXNzYWdlcy9NZXNzYWdlcy5wcm90bxIITWVzc2FnZXMi0QEKB01lc3Nh",
            "Z2USDAoEdHlwZRgBIAEoCRIsCgtwYWdlcmVxdWVzdBgCIAEoCzIVLk1lc3Nh",
            "Z2VzLlBhZ2VSZXF1ZXN0SAASLgoMcXVlcnlyZXN1bHRzGAMgASgLMhYuTWVz",
            "c2FnZXMuUXVlcnlSZXN1bHRzSAASKgoKcGFnZXJlc3VsdBgEIAEoCzIULk1l",
            "c3NhZ2VzLlBhZ2VSZXN1bHRIABIgCgVxdWVyeRgFIAEoCzIPLk1lc3NhZ2Vz",
            "LlF1ZXJ5SABCDAoKU3ViTWVzc2FnZSIbCgtQYWdlUmVxdWVzdBIMCgRwYXRo",
            "GAEgASgJIjQKDFF1ZXJ5UmVzdWx0cxIkCgdyZXN1bHRzGAEgAygLMhMuTWVz",
            "c2FnZXMuUXVlcnlJdGVtIicKCVF1ZXJ5SXRlbRIMCgRwYXRoGAEgASgJEgwK",
            "BG5hbWUYAiABKAkiKAoKUGFnZVJlc3VsdBIMCgRodG1sGAEgASgJEgwKBG5h",
            "bWUYAiABKAkiFgoFUXVlcnkSDQoFcXVlcnkYASABKAkqWgoLTWVzc2FnZVR5",
            "cGUSDQoJSEVBUlRCRUFUEAASEAoMUVVFUllSRVNVTFRTEAESCQoFUVVFUlkQ",
            "AhIPCgtQQUdFUkVRVUVTVBADEg4KClBBR0VSRVNVTFQQBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Messages.MessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Message), global::Messages.Message.Parser, new[]{ "Type", "Pagerequest", "Queryresults", "Pageresult", "Query" }, new[]{ "SubMessage" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.PageRequest), global::Messages.PageRequest.Parser, new[]{ "Path" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.QueryResults), global::Messages.QueryResults.Parser, new[]{ "Results" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.QueryItem), global::Messages.QueryItem.Parser, new[]{ "Path", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.PageResult), global::Messages.PageResult.Parser, new[]{ "Html", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Query), global::Messages.Query.Parser, new[]{ "Query_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("HEARTBEAT")] Heartbeat = 0,
    [pbr::OriginalName("QUERYRESULTS")] Queryresults = 1,
    [pbr::OriginalName("QUERY")] Query = 2,
    [pbr::OriginalName("PAGEREQUEST")] Pagerequest = 3,
    [pbr::OriginalName("PAGERESULT")] Pageresult = 4,
  }

  #endregion

  #region Messages
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      type_ = other.type_;
      switch (other.SubMessageCase) {
        case SubMessageOneofCase.Pagerequest:
          Pagerequest = other.Pagerequest.Clone();
          break;
        case SubMessageOneofCase.Queryresults:
          Queryresults = other.Queryresults.Clone();
          break;
        case SubMessageOneofCase.Pageresult:
          Pageresult = other.Pageresult.Clone();
          break;
        case SubMessageOneofCase.Query:
          Query = other.Query.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagerequest" field.</summary>
    public const int PagerequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.PageRequest Pagerequest {
      get { return subMessageCase_ == SubMessageOneofCase.Pagerequest ? (global::Messages.PageRequest) subMessage_ : null; }
      set {
        subMessage_ = value;
        subMessageCase_ = value == null ? SubMessageOneofCase.None : SubMessageOneofCase.Pagerequest;
      }
    }

    /// <summary>Field number for the "queryresults" field.</summary>
    public const int QueryresultsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.QueryResults Queryresults {
      get { return subMessageCase_ == SubMessageOneofCase.Queryresults ? (global::Messages.QueryResults) subMessage_ : null; }
      set {
        subMessage_ = value;
        subMessageCase_ = value == null ? SubMessageOneofCase.None : SubMessageOneofCase.Queryresults;
      }
    }

    /// <summary>Field number for the "pageresult" field.</summary>
    public const int PageresultFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.PageResult Pageresult {
      get { return subMessageCase_ == SubMessageOneofCase.Pageresult ? (global::Messages.PageResult) subMessage_ : null; }
      set {
        subMessage_ = value;
        subMessageCase_ = value == null ? SubMessageOneofCase.None : SubMessageOneofCase.Pageresult;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messages.Query Query {
      get { return subMessageCase_ == SubMessageOneofCase.Query ? (global::Messages.Query) subMessage_ : null; }
      set {
        subMessage_ = value;
        subMessageCase_ = value == null ? SubMessageOneofCase.None : SubMessageOneofCase.Query;
      }
    }

    private object subMessage_;
    /// <summary>Enum of possible cases for the "SubMessage" oneof.</summary>
    public enum SubMessageOneofCase {
      None = 0,
      Pagerequest = 2,
      Queryresults = 3,
      Pageresult = 4,
      Query = 5,
    }
    private SubMessageOneofCase subMessageCase_ = SubMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubMessageOneofCase SubMessageCase {
      get { return subMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubMessage() {
      subMessageCase_ = SubMessageOneofCase.None;
      subMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Pagerequest, other.Pagerequest)) return false;
      if (!object.Equals(Queryresults, other.Queryresults)) return false;
      if (!object.Equals(Pageresult, other.Pageresult)) return false;
      if (!object.Equals(Query, other.Query)) return false;
      if (SubMessageCase != other.SubMessageCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (subMessageCase_ == SubMessageOneofCase.Pagerequest) hash ^= Pagerequest.GetHashCode();
      if (subMessageCase_ == SubMessageOneofCase.Queryresults) hash ^= Queryresults.GetHashCode();
      if (subMessageCase_ == SubMessageOneofCase.Pageresult) hash ^= Pageresult.GetHashCode();
      if (subMessageCase_ == SubMessageOneofCase.Query) hash ^= Query.GetHashCode();
      hash ^= (int) subMessageCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (subMessageCase_ == SubMessageOneofCase.Pagerequest) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagerequest);
      }
      if (subMessageCase_ == SubMessageOneofCase.Queryresults) {
        output.WriteRawTag(26);
        output.WriteMessage(Queryresults);
      }
      if (subMessageCase_ == SubMessageOneofCase.Pageresult) {
        output.WriteRawTag(34);
        output.WriteMessage(Pageresult);
      }
      if (subMessageCase_ == SubMessageOneofCase.Query) {
        output.WriteRawTag(42);
        output.WriteMessage(Query);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (subMessageCase_ == SubMessageOneofCase.Pagerequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagerequest);
      }
      if (subMessageCase_ == SubMessageOneofCase.Queryresults) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Queryresults);
      }
      if (subMessageCase_ == SubMessageOneofCase.Pageresult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pageresult);
      }
      if (subMessageCase_ == SubMessageOneofCase.Query) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      switch (other.SubMessageCase) {
        case SubMessageOneofCase.Pagerequest:
          Pagerequest = other.Pagerequest;
          break;
        case SubMessageOneofCase.Queryresults:
          Queryresults = other.Queryresults;
          break;
        case SubMessageOneofCase.Pageresult:
          Pageresult = other.Pageresult;
          break;
        case SubMessageOneofCase.Query:
          Query = other.Query;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            global::Messages.PageRequest subBuilder = new global::Messages.PageRequest();
            if (subMessageCase_ == SubMessageOneofCase.Pagerequest) {
              subBuilder.MergeFrom(Pagerequest);
            }
            input.ReadMessage(subBuilder);
            Pagerequest = subBuilder;
            break;
          }
          case 26: {
            global::Messages.QueryResults subBuilder = new global::Messages.QueryResults();
            if (subMessageCase_ == SubMessageOneofCase.Queryresults) {
              subBuilder.MergeFrom(Queryresults);
            }
            input.ReadMessage(subBuilder);
            Queryresults = subBuilder;
            break;
          }
          case 34: {
            global::Messages.PageResult subBuilder = new global::Messages.PageResult();
            if (subMessageCase_ == SubMessageOneofCase.Pageresult) {
              subBuilder.MergeFrom(Pageresult);
            }
            input.ReadMessage(subBuilder);
            Pageresult = subBuilder;
            break;
          }
          case 42: {
            global::Messages.Query subBuilder = new global::Messages.Query();
            if (subMessageCase_ == SubMessageOneofCase.Query) {
              subBuilder.MergeFrom(Query);
            }
            input.ReadMessage(subBuilder);
            Query = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageRequest : pb::IMessage<PageRequest> {
    private static readonly pb::MessageParser<PageRequest> _parser = new pb::MessageParser<PageRequest>(() => new PageRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageRequest(PageRequest other) : this() {
      path_ = other.path_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageRequest Clone() {
      return new PageRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResults : pb::IMessage<QueryResults> {
    private static readonly pb::MessageParser<QueryResults> _parser = new pb::MessageParser<QueryResults>(() => new QueryResults());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResults(QueryResults other) : this() {
      results_ = other.results_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResults Clone() {
      return new QueryResults(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Messages.QueryItem> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Messages.QueryItem.Parser);
    private readonly pbc::RepeatedField<global::Messages.QueryItem> results_ = new pbc::RepeatedField<global::Messages.QueryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Messages.QueryItem> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResults other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryItem : pb::IMessage<QueryItem> {
    private static readonly pb::MessageParser<QueryItem> _parser = new pb::MessageParser<QueryItem>(() => new QueryItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryItem(QueryItem other) : this() {
      path_ = other.path_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryItem Clone() {
      return new QueryItem(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryItem other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageResult : pb::IMessage<PageResult> {
    private static readonly pb::MessageParser<PageResult> _parser = new pb::MessageParser<PageResult>(() => new PageResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageResult(PageResult other) : this() {
      html_ = other.html_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageResult Clone() {
      return new PageResult(this);
    }

    /// <summary>Field number for the "html" field.</summary>
    public const int HtmlFieldNumber = 1;
    private string html_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Html {
      get { return html_; }
      set {
        html_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Html != other.Html) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Html.Length != 0) hash ^= Html.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Html.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Html);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Html.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Html);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageResult other) {
      if (other == null) {
        return;
      }
      if (other.Html.Length != 0) {
        Html = other.Html;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Html = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      query_ = other.query_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int Query_FieldNumber = 1;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query_ {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query_ != other.Query_) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query_.Length != 0) hash ^= Query_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Query_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query_);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query_);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.Query_.Length != 0) {
        Query_ = other.Query_;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Query_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
